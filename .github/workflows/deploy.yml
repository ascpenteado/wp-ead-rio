name: Deploy to DigitalOcean

on:
  workflow_run:
    workflows: ["Build Docker Image"]
    types:
      - completed
    branches: [main]
  push:
    branches: [main]
    paths:
      - 'docker-compose.prod.yml'
      - 'php-prod.ini'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: wp-ead-rio

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || '22' }}
        script: |
          # Set the Docker image with registry path
          export DOCKER_IMAGE="${{ env.REGISTRY }}/${{ secrets.DO_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:latest"

          # Create and navigate to project directory
          sudo mkdir -p /opt/wp-ead-rio
          cd /opt/wp-ead-rio

          # Download docker-compose.prod.yml if it doesn't exist
          if [ ! -f docker-compose.prod.yml ]; then
            curl -o docker-compose.prod.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.prod.yml
          fi

          # Download PHP production configuration if it doesn't exist
          if [ ! -f php-prod.ini ]; then
            curl -o php-prod.ini https://raw.githubusercontent.com/${{ github.repository }}/main/php-prod.ini
          fi

          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            cat > .env << EOF
          DOCKER_IMAGE=$DOCKER_IMAGE
          DB_NAME=wp_ead_rio
          DB_USER=wp_user
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
          TABLE_PREFIX=wp_
          WP_DEBUG=false
          EOF
          fi

          # Login to DigitalOcean Container Registry
          echo "Logging into container registry..."
          echo "${{ secrets.DO_REGISTRY_TOKEN }}" | docker login registry.digitalocean.com -u "${{ secrets.DO_REGISTRY_TOKEN }}" --password-stdin

          # Pull the latest image
          echo "Pulling latest Docker image: $DOCKER_IMAGE"
          if ! docker pull $DOCKER_IMAGE; then
            echo "Failed to pull Docker image. Check registry access and image name."
            exit 1
          fi

          # Update the running containers
          echo "Updating containers..."
          if ! docker-compose -f docker-compose.prod.yml up -d --no-deps wordpress; then
            echo "Failed to update containers. Check docker-compose.prod.yml and .env file."
            exit 1
          fi

          # Clean up old images
          echo "Cleaning up old images..."
          docker image prune -f

          echo "Deployment completed successfully!"

    - name: Verify deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || '22' }}
        script: |
          cd /opt/wp-ead-rio
          echo "Checking container status..."
          docker-compose -f docker-compose.prod.yml ps

          echo "Checking WordPress health..."
          docker-compose -f docker-compose.prod.yml exec -T wordpress wp --version || echo "WordPress CLI not available"