name: Test Development Environment

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - 'Dockerfile'
      - 'docker-compose.dev.yml'
      - 'package.json'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-development:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Create test environment file
      run: |
        cp .env.local .env
        # Override with test values
        echo "DB_NAME=wp_ead_rio_test" >> .env
        echo "DB_PASSWORD=test_password" >> .env

    - name: Build and start development environment
      run: |
        docker-compose -f docker-compose.dev.yml build
        docker-compose -f docker-compose.dev.yml up -d

    - name: Wait for WordPress to be ready
      run: |
        timeout 300 bash -c 'until curl -f http://localhost/wp-admin/install.php; do sleep 5; done'

    - name: Test theme build
      run: |
        cd web/wp-content/themes/ead-rio
        pnpm install
        pnpm run build
        # Verify build outputs exist
        test -f dist/js/src/theme.js
        test -f dist/css/style.css

    - name: Run theme linting
      run: |
        cd web/wp-content/themes/ead-rio
        pnpm run lint

    - name: Test database connection
      run: |
        docker-compose -f docker-compose.dev.yml exec -T db mysql -u wp_user -pwp_password -e "SHOW DATABASES;"

    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.dev.yml down -v
        docker system prune -f